---
    - name: Prepare for k8s networking 
      shell:
        cmd: | 
          cat <<EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          EOF
    
    - name: Configure containerd for k8s 1/2
      become: true
      become_user: root
      ansible.builtin.shell: |
        sudo modprobe overlay
        sudo modprobe br_netfilter

    - name: Configure containerd for k8s 2/2
      shell:
        cmd: |
          cat <<EOF | sudo tee /etc/modules-load.d/containerd.conf
          overlay
          br_netfilter
          EOF

     
    - name: Install required system packages
      become: true
      become_user: root
      apt: name=docker state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common' ]

    - name: Add Docker GPG apt Key
      become: true
      become_user: root
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      become: true
      become_user: root  
      apt_repository:
        repo: "{{ repo }}"
        state: present

    - name: RedHat | Install packages
      become: yes
      become_user: root
      package: 
        name: "{{ item }}"
        state: present
        allow_downgrade: yes
      loop: "{{ docker_packages }}"
      notify:
      - start docker

    - name: Configure containerd for k8s 2/2
      become: true
      become_user: root
      shell:
        cmd: |
          sudo containerd config default | sudo tee /etc/containerd/config.toml
          sed -i 's/systemd_cgroup = false/systemd_cgroup = true/g' /etc/containerd/config.toml
      ignore_errors: yes

  #  - name: Create file {{ hosts_file }}
   #   become: true
    #  become_user: root
     # template:
     #   src: "templates\daemon.json"
     #   dest: "/etc/docker/daemon.json"
     # ignore_errors: yes
